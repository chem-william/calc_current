#!/bin/bash
if [ $# -ne 3 ] && [ $# -ne 4 ]; then
    echo " This script has to be called in the following form:"
    echo ""
    echo "                    current_submit queue cores mem"
    echo "Optionally a fourth argument can be the name of the job"
    exit
fi

QUEUE=$1
CORES=$2
MEM=$3
NAME=$4

if [ -z "$NAME" ]; then
	NAME="current_calc"
	echo "Job name has been set to default: $NAME"
fi

SUBMIT=qsub.tmp
PWD=`pwd`

# Checks if there is already data present so it doesn't overwrite
if [ -f $PWD/data/central_region.xyz ]
then
    read -p "Seems like there's already some data. Do you want to delete everything and re-run the script? y/n" -n 1 -r
    echo
    echo

    if [[ $REPLY =~ ^[Yy]$ ]]
    then
        rm -rfv data/ __pycache__/ logfile.txt seq.*.err seq.*.out
    else
        exit
    fi
fi

mkdir data
mkdir data/basis
mkdir data/basis/ao
mkdir data/basis/mo
mkdir data/basis/eigenchannels
mkdir data/plots
mkdir data/data
cp hh_junc.traj data/.

cat > $SUBMIT <<!EOF
#!/bin/bash
#SBATCH --job-name=$NAME
#SBATCH --error=`pwd`/seq.%j.err
#SBATCH --output=`pwd`/seq.%j.out
#SBATCH --nodes=1
#SBATCH --ntasks=$CORES
#SBATCH --cpus-per-task=2
#SBATCH --mem=$MEM"gb"
#SBATCH --partition=$QUEUE

#Important to set OPENBLAS_NUM_THREADS
#GPAW will hang for a long time if not
export OPENBLAS_NUM_THREADS=1

gpaw -P $CORES python ~/bin/py_scripts/calc_current/calc_currents.py --path $PWD/data --config $PWD/config

!EOF

sbatch $SUBMIT
rm $SUBMIT
